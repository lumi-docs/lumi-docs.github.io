(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{170:function(e,t,a){"use strict";a.r(t);var r=a(0),s=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[e._m(0),e._v(" "),a("p",[e._v("We are currently facing certain issues with data management. These are:")]),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),a("p",[e._v("The Template:")]),e._v(" "),e._m(9),a("p",[e._v("An Example:")]),e._v(" "),e._m(10),e._m(11),e._v(" "),a("p",[e._v("The root directory of a repository should be compact and common folder names should be used throughout the repository. Placing files in folders having proper names, adds meaning to the files. This leads to an organized repository where files are easily discoverable. Files should not be placed in the root directory if they can be placed in a folder.")]),e._v(" "),e._m(12),e._v(" "),a("p",[e._v("Although the folder structure for repositories need not be as concrete as that for data, the basic idea should remain the same. We want a compact root folder (and ideally, compact lower level folders as well), common folder names, and files inside folders rather than in the root. Here is an example.")]),e._v(" "),e._m(13),e._m(14),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),a("ol",[e._m(17),e._v(" "),a("li",[e._m(18),e._v(" "),a("p",[e._v("Use "),a("strong",[e._v("text")]),e._v(", "),a("strong",[e._v("word")]),e._v(" or "),a("strong",[e._v("markdown")]),e._v(" (whichever you think suits better for that folder) for the instructions file. In a GIT repository, the instructions file has to be in markdown and named "),a("strong",[e._v("README.md")]),e._v(" because whenever you browse into a folder containing a README.md file, GIT automatically displays its contents. For previewing instructions file when you enter a data folder on your local machine, use the file explorer's preview window. The Preview window can be enabled in "),a("strong",[e._v("Windows 10")]),e._v(" by following these steps: (1) open a "),a("strong",[e._v("Windows Explorer")]),e._v(" window, (2) click on the "),a("strong",[e._v("View")]),e._v(" button at the top left and (3) click on the "),a("strong",[e._v("Preview pane")]),e._v(" button under "),a("strong",[e._v("Panes")]),e._v(". Click on any file in the explorer and its preview will appear in the preview pane. For "),a("strong",[e._v("Mac")]),e._v(" and "),a("strong",[e._v("Ubuntu")]),e._v(", click on a file in the file explorer and press the "),a("strong",[e._v("space")]),e._v(" key to preview. For "),a("strong",[e._v("Mac")]),e._v(", this feature is in-built and for "),a("strong",[e._v("Ubuntu")]),e._v(", you have to install a "),a("a",{attrs:{href:"https://www.google.com/search?q=preview+file+in+ubuntu",target:"_blank",rel:"noopener noreferrer"}},[e._v("plugin"),a("OutboundLink")],1),e._v(".")])])]),e._v(" "),e._m(19),e._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[a("strong",[e._v("Dataset interfacing code")]),e._v(": A dataset interfacing code is the "),a("strong",[e._v("ONLY CODE")]),e._v(" that should be placed in a folder containing data. The interfacing code should be "),a("strong",[e._v("minimal")]),e._v(" and "),a("strong",[e._v("universally usable")]),e._v(". The instructions file in a folder containing interfacing code should also list every function that can be used directly by the user (not helper functions) with a short description and I/Os for each function. Here is an "),a("router-link",{attrs:{to:"/docs/m_series_json_data/#reading-data"}},[e._v("example")]),e._v(" of instructions for a script file used to interface with M Series JSON dataset. If you are the creator of a dataset, a short description of your dataset should also be included in the instructions file.")],1)]),e._v(" "),e._m(20)]),e._v(" "),e._m(21),e._v(" "),e._m(22),e._v(" "),e._m(23),e._v(" "),a("p",[e._v("Many of the practices below are important for organizing data and code but are optional so that users can adopt them gradually.")]),e._v(" "),e._m(24),e._v(" "),e._m(25),e._v(" "),e._m(26),e._v(" "),e._m(27),e._v(" "),e._m(28),e._v(" "),e._m(29),e._v(" "),e._m(30),e._v(" "),e._m(31),e._v(" "),e._m(32),e._v(" "),e._m(33),e._v(" "),e._m(34),e._v(" "),e._m(35),e._v(" "),e._m(36),e._v(" "),e._m(37),e._v(" "),e._m(38),e._v(" "),e._m(39),e._v(" "),e._m(40),e._v(" "),e._m(41)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"data-management-protocol-and-nas-cleanup-proposal-draft-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#data-management-protocol-and-nas-cleanup-proposal-draft-2","aria-hidden":"true"}},[this._v("#")]),this._v(" Data Management Protocol and NAS cleanup- Proposal- Draft 2")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[t("strong",[this._v("Duplicates")])]),this._v(" "),t("li",[t("strong",[this._v("Old unused data")])]),this._v(" "),t("li",[t("strong",[this._v("Difficulty locating data/code or figuring out its properties/purpose")])]),this._v(" "),t("li",[t("strong",[this._v("Unknown author of code and owner of datasets")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("This document proposes a "),t("a",{attrs:{href:"#data-management-protocol"}},[this._v("Data Management Protocol")]),this._v(" to avoid these (and other common) issues in the future, and a "),t("a",{attrs:{href:"#nas-cleaning-plan"}},[this._v("NAS cleaning and organization plan")]),this._v(" to address them.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"data-management-protocol"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#data-management-protocol","aria-hidden":"true"}},[this._v("#")]),this._v(" Data Management Protocol")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("This section lists "),a("strong",[e._v("(1)")]),e._v(" "),a("a",{attrs:{href:"#folder-structures"}},[e._v("Folder structures")]),e._v(" for data and GIT repositories, "),a("strong",[e._v("(2)")]),e._v(" some "),a("a",{attrs:{href:"#filing-rules"}},[e._v("filing rules")]),e._v(" and "),a("strong",[e._v("(3)")]),e._v(" some "),a("a",{attrs:{href:"#best-practices"}},[e._v("best practices")]),e._v("- for organizing "),a("strong",[e._v("data")]),e._v(" and "),a("strong",[e._v("code")]),e._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"folder-structures"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#folder-structures","aria-hidden":"true"}},[this._v("#")]),this._v(" Folder structures")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"for-data"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-data","aria-hidden":"true"}},[this._v("#")]),this._v(" For data")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("Having a simple and intuitive folder structure is essential for organizing data. Data should be easily discoverable and there should not be any ambiguity to where a new dataset should be placed. New folders can be created as and when required. In the template below, a folder named "),a("strong",[e._v("archive_data")]),e._v(" can be created in the "),a("strong",[e._v("W:/")]),e._v(" drive when we need to archive a dataset from the "),a("strong",[e._v("data/")]),e._v(" folder. The "),a("strong",[e._v("archive_data/")]),e._v(" folder can have the same folder structure as the "),a("strong",[e._v("data/")]),e._v(" folder.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Having such categorization of data already in place, makes migration to the cloud easier as well. In this scenario, migration of data to the cloud will be a single step process- simply upload the "),t("strong",[this._v("archive_data/")]),this._v(" folder to a cold storage bucket and the "),t("strong",[this._v("data/")]),this._v(" folder to a regional storage bucket.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("W:/\n└── data/ \n    └── <data_category>/\n        └── <dataset_name>/\n            └── <files in your dataset>\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("W:/\n└── data/ \n    ├── facial/\n    │   ├── ijb/\n    │   │   ├── ijb_compressed.tar\n    │   │   └── instructions.txt\n    │   └── vggface_2/\n    │       ├── thumnails_for_facial_recognition/\n    │       ├── train.tar.gz\n    │       ├── test.tar.gz\n    │       └── instructions.txt\n    └── fingerprint/\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"for-git-repositories"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-git-repositories","aria-hidden":"true"}},[this._v("#")]),this._v(" For GIT repositories")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("In Bitbucket hierarchy, "),a("strong",[e._v("teams")]),e._v(" have "),a("strong",[e._v("projects")]),e._v(" and "),a("strong",[e._v("projects")]),e._v(" have "),a("strong",[e._v("repositories")]),e._v(". GIT projects should be named based on the current projects the team is working on and repositories should host disjoint functional parts of the project. This also gives us the freedom to either archive- individual repositories or whole projects.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("repo_root:/\n├── models/ \n│   ├── mobilenet/\n│   └── my_model/\n├── results/\n│   └── my_model/\n│       ├── checkpoints/\n│       ├── weights/\n│       └── README.md\n├── src/\n│   ├── data\n│   │   └── make_dataset.py\n│   ├── features\n│   │   └── build_features.py\n│   ├── models\n│   │   ├── predict_model.py\n│   │   └── train_model.py\n│   └── visualization\n│       └── visualize.py\n├── requirements.txt\n├── LISENCE.txt\n└── README.txt\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"filing-rules"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#filing-rules","aria-hidden":"true"}},[this._v("#")]),this._v(" Filing rules")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("These practices are vital to avoid the current issues we are facing. These points are also summarized in a "),t("a",{attrs:{href:"#summary"}},[this._v("table")]),this._v(" below, which can be printed and used as a guide.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"for-both-data-and-git-repositories"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-both-data-and-git-repositories","aria-hidden":"true"}},[this._v("#")]),this._v(" For both data and GIT repositories")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("li",[a("p",[a("strong",[e._v("Naming convention")]),e._v(": For naming files and folders, only use "),a("strong",[e._v("small letters")]),e._v(", "),a("strong",[e._v("numbers")]),e._v(" and "),a("strong",[e._v("underscores")]),e._v(" and separate letters and numbers with "),a("strong",[e._v("underscores")]),e._v(" as well. Without a convention, we can name the same data, many different ways. For example, a folder named "),a("strong",[e._v("Facial recognition dataset V-1.2")]),e._v(" can also be named "),a("strong",[e._v("facial recognition dataset v 1.2")]),e._v(" or "),a("strong",[e._v("Facial Recognition Dataset V-1.20")]),e._v(". This promotes duplicates. Using our convention, it can only be named "),a("strong",[e._v("facial_recognition_dataset_v_1_2")]),e._v(".")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Instructions")]),this._v(": "),t("strong",[this._v("ALWAYS")]),this._v(" add an instructions file in all the folders you create. This file will contain "),t("strong",[this._v("concise")]),this._v(" instructions about the contents of the folder that others might need to know about. Every time you make a change to the contents of a folder, see if you need to update its instructions file. If the folder contains scripts, the instructions file should contain a short description of what these files are used for and how to use them. This information and the comments inside the code should be adequate for anybody to make use of the code. If the folder contains a saved model, then the instructions file should contain a few lines about the model, so that anybody can use it.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"for-data-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-data-2","aria-hidden":"true"}},[this._v("#")]),this._v(" For data")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("li",[a("p",[a("strong",[e._v("Modifying data")]),e._v(": If a dataset needs to be modified for a particular project, please consider copying the data locally first, and then modifying and working on the data. If the modified data has to be shared, then a folder with an appropriate name can be created inside the dataset folder, like the "),a("strong",[e._v("thumnails_for_facial_recognition/")]),e._v(" folder created under "),a("strong",[e._v("W:/data/facial/vggface_2/")]),e._v(" directory in the example provided in the "),a("a",{attrs:{href:"#folder-structures"}},[e._v("Folder structure for data")]),e._v(" section above. This folder can be deleted when the project is completed. Examples of such modifications could be- extracting the dataset, creating tf-records, creating cropped and aligned images and other forms of data preprocessing.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"for-git-repositories-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-git-repositories-2","aria-hidden":"true"}},[this._v("#")]),this._v(" For GIT repositories")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",{attrs:{start:"5"}},[t("li",[t("strong",[this._v("Secondary repositories")]),this._v(": In addition to repositories that eventually host a finished product, secondary repositories should be used to host supporting code (not directly related to deployable code), so that the process can be repeated or improved in the future if needed. Such repositories for example, could host code for (1) collecting and preprocessing data, (2) producing datasets and (3) documentation webpages.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"best-practices"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#best-practices","aria-hidden":"true"}},[this._v("#")]),this._v(" Best practices")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"for-both-data-and-git-repositories-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-both-data-and-git-repositories-2","aria-hidden":"true"}},[this._v("#")]),this._v(" For both data and GIT repositories")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ol",[a("li",[a("p",[a("strong",[e._v("Directories")]),e._v(": Find an apt location for your files in the directory tree rather than creating a new one. We do not want a directory tree that is too wide. Although some level of hierarchy is good for organization, too much depth in the directory tree should also be avoided. The initial folder structure will be created, but users should keep these points in mind while adding files and folders to the folder structure.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("Orphans")]),e._v(": Ideally, a folder should contain only folders, or only files. If a folder contains some folders and some files, the files are called "),a("strong",[e._v("orphans")]),e._v(". Try to categories these files by moving them to an appropriate folder or create a folder named "),a("strong",[e._v("misc")]),e._v(" in that directory and move these files to the misc folder. "),a("strong",[e._v("Instructions")]),e._v(" or "),a("strong",[e._v("dataset interfacing code")]),e._v(" files can be orphans. Please use your best judgement to decide if a "),a("strong",[e._v("misc")]),e._v(" folder is required.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("Abbreviations")]),e._v(': A folder/file name should not be unintelligibly short or unnecessarily long. Very common abbreviations should be used if needed. For example, a folder containing some configuration files need not be named "configuration_files" or the other extreme- "cnf". But "config" on the other hand, is a short and common abbreviation that makes sense.')])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("File as you go")]),e._v(": Always keep your data and code updated, even if nobody needs it at that moment.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("Dates")]),e._v(": If you need to include dates in folder or file names, use "),a("strong",[e._v("YYYY-MM-DD")]),e._v(" format and include it in the beginning of the file/folder name. This helps in sorting your files by date and ensures consistency as well.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("Series")]),e._v(": If you plan to use serial numbers for a sequence of files, estimate how many files you are going to create and pad zeros to match the number of digits in each serial number. For example, if you plan to create around 150 (3 digits) files, start your series with "),a("strong",[e._v("001 and not just 1")]),e._v(".")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"for-git-repositories-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-git-repositories-3","aria-hidden":"true"}},[this._v("#")]),this._v(" For GIT repositories")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ol",{attrs:{start:"7"}},[a("li",[a("p",[a("strong",[e._v("Requirements.txt")]),e._v(": Always have a "),a("strong",[e._v("requirements.txt")]),e._v(" file in the root directory of the repository. Requirements file can also be added to individual folders if the repository has subparts that run on different environments. Such details should be mentioned in the appropriate README.md file.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("Coding standards")]),e._v(": The "),a("a",{attrs:{href:"#filing-rules"}},[e._v("file naming convention")]),e._v(" and the rules for "),a("a",{attrs:{href:"#best-practices"}},[e._v("abbreviations")]),e._v(" should also be followed for naming variables and functions. The code should be adequately commented (some quick but informative lines wherever needed).")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("User specific files")]),e._v(": Do not commit user specific or temporary files such as "),a("strong",[e._v("pycache")]),e._v(" that does not have a purpose in the projects repository.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("Function based naming")]),e._v(": Name folders based on the function of its contents rather that based on the contributor's name. Information about the creators and editors of every file is tracked by the GIT platform.")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"summary"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#summary","aria-hidden":"true"}},[this._v("#")]),this._v(" Summary")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"folder-structure"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#folder-structure","aria-hidden":"true"}},[this._v("#")]),this._v(" Folder Structure")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("table",[a("thead",[a("tr",[a("th",[e._v("#")]),e._v(" "),a("th",[e._v("Category")]),e._v(" "),a("th",[e._v("Folder Structure Points")]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("1")]),e._v(" "),a("td",[e._v("Data")]),e._v(" "),a("td",[a("strong",[e._v("Simple and intuitive")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Makes data easily discoverable.")])]),e._v(" "),a("tr",[a("td",[e._v("2")]),e._v(" "),a("td",[e._v("Data")]),e._v(" "),a("td",[a("strong",[e._v("Data category")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Creates a compact and organized directory tree.")])]),e._v(" "),a("tr",[a("td",[e._v("3")]),e._v(" "),a("td",[e._v("Code")]),e._v(" "),a("td",[a("strong",[e._v("Common folder names")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Common folder names such as "),a("strong",[e._v("models")]),e._v(", "),a("strong",[e._v("src")]),e._v(" and "),a("strong",[e._v("results")]),e._v(" should be used.")])]),e._v(" "),a("tr",[a("td",[e._v("4")]),e._v(" "),a("td",[e._v("Code")]),e._v(" "),a("td",[a("strong",[e._v("Files inside folders")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Placing files inside folders adds meaning to them and creates a narrow/compact directory tree.")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"filing-rules-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#filing-rules-2","aria-hidden":"true"}},[this._v("#")]),this._v(" Filing Rules")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("table",[a("thead",[a("tr",[a("th",[e._v("#")]),e._v(" "),a("th",[e._v("Category")]),e._v(" "),a("th",[e._v("Filing Rules")]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("1")]),e._v(" "),a("td",[e._v("Data and code")]),e._v(" "),a("td",[a("strong",[e._v("Naming convention")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Use small letters, numbers and underscores. Separate letters and numbers using underscores.")])]),e._v(" "),a("tr",[a("td",[e._v("2")]),e._v(" "),a("td",[e._v("Data and code")]),e._v(" "),a("td",[a("strong",[e._v("Instructions")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Always create an instructions file in the folders you create. For repositories, always use README.md.")])]),e._v(" "),a("tr",[a("td",[e._v("3")]),e._v(" "),a("td",[e._v("Data")]),e._v(" "),a("td",[a("strong",[e._v("Dataset interfacing code")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("The only code that should reside in a dataset folder.")])]),e._v(" "),a("tr",[a("td",[e._v("4")]),e._v(" "),a("td",[e._v("Data")]),e._v(" "),a("td",[a("strong",[e._v("Modifying data")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Create a folder with an apt name inside the dataset folder so that it can be deleted when the data is not needed anymore.")])]),e._v(" "),a("tr",[a("td",[e._v("5")]),e._v(" "),a("td",[e._v("Code")]),e._v(" "),a("td",[a("strong",[e._v("Secondary repositories")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("For supporting code- code that is not directly related to deployable code.")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"best-practices-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#best-practices-2","aria-hidden":"true"}},[this._v("#")]),this._v(" Best Practices")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("table",[a("thead",[a("tr",[a("th",[e._v("#")]),e._v(" "),a("th",[e._v("Category")]),e._v(" "),a("th",[e._v("Best Practices")]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("1")]),e._v(" "),a("td",[e._v("Data and code")]),e._v(" "),a("td",[a("strong",[e._v("Directories")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Find an apt location for your files rather than creating one.")])]),e._v(" "),a("tr",[a("td",[e._v("2")]),e._v(" "),a("td",[e._v("Data and code")]),e._v(" "),a("td",[a("strong",[e._v("Orphans")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Orphan files should be classified into folders, and create a "),a("strong",[e._v("misc/")]),e._v(" folder for the remaining if there are too many of them.")])]),e._v(" "),a("tr",[a("td",[e._v("3")]),e._v(" "),a("td",[e._v("Data and code")]),e._v(" "),a("td",[a("strong",[e._v("Abbreviations")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Use common well know short forms- neither too short nor too long.")])]),e._v(" "),a("tr",[a("td",[e._v("4")]),e._v(" "),a("td",[e._v("Data and code")]),e._v(" "),a("td",[a("strong",[e._v("File as you go")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Always keep your shared files updated.")])]),e._v(" "),a("tr",[a("td",[e._v("5")]),e._v(" "),a("td",[e._v("Data and code")]),e._v(" "),a("td",[a("strong",[e._v("Dates")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Use "),a("strong",[e._v("YYYY-MM-DD")]),e._v(" format when including dates in filenames. Put date in the beginning of the files.")])]),e._v(" "),a("tr",[a("td",[e._v("6")]),e._v(" "),a("td",[e._v("Data and code")]),e._v(" "),a("td",[a("strong",[e._v("Series")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Use zero padded numbers for series in filenames. Ex.- use the filename, subject_001.jpg, not subject_1.jpg if there are <999 but >100 subjects.")])]),e._v(" "),a("tr",[a("td",[e._v("7")]),e._v(" "),a("td",[e._v("Code")]),e._v(" "),a("td",[a("strong",[e._v("Requirements.txt")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Place in the root directory or inside folders if required.")])]),e._v(" "),a("tr",[a("td",[e._v("8")]),e._v(" "),a("td",[e._v("Code")]),e._v(" "),a("td",[a("strong",[e._v("Coding standards")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Comment inside the code and follow the rules for naming and abbreviations.")])]),e._v(" "),a("tr",[a("td",[e._v("9")]),e._v(" "),a("td",[e._v("Code")]),e._v(" "),a("td",[a("strong",[e._v("User specific files")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Do not commit "),a("strong",[e._v("pyche")]),e._v(" or similar files that has no purpose in the repository.")])]),e._v(" "),a("tr",[a("td",[e._v("10")]),e._v(" "),a("td",[e._v("Code")]),e._v(" "),a("td",[a("strong",[e._v("Function based naming")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("Name folders by the function of its contents rather than by the name of a contributor.")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"things-to-remember"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#things-to-remember","aria-hidden":"true"}},[this._v("#")]),this._v(" Things to remember")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[this._v("Too much documentation is unrealistic and too less is not helpful. We want to spend little time now to save a lot of time later.")]),this._v(" "),t("li",[this._v("We want our projects and data to be usable/understandable by others, now and in the future.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"nas-cleaning-plan"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nas-cleaning-plan","aria-hidden":"true"}},[this._v("#")]),this._v(" NAS cleaning Plan")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"cleaning-steps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cleaning-steps","aria-hidden":"true"}},[this._v("#")]),this._v(" Cleaning steps")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ol",[a("li",[e._v("Create the "),a("a",{attrs:{href:"#folder-structures"}},[e._v("folder structure")]),e._v(" and move data files to their new locations.")]),e._v(" "),a("li",[e._v("Maintain a log mapping previous locations to new locations.")]),e._v(" "),a("li",[e._v("Rename data files as per "),a("a",{attrs:{href:"#filing-rules"}},[e._v("naming convention")]),e._v(" (Except files that are part of downloaded datasets).")]),e._v(" "),a("li",[e._v("Maintain a log mapping old names to new names.")]),e._v(" "),a("li",[e._v("Remove duplicates.")]),e._v(" "),a("li",[e._v("Put "),a("a",{attrs:{href:"#filing-rules"}},[e._v("instructions")]),e._v(" files in each folder.")]),e._v(" "),a("li",[e._v("Separate out code files and move them to repositories or mark them for deletion.")]),e._v(" "),a("li",[e._v("Communicate with the team during weekly meetings and through emails when required, to mark data/code files that can be archived or deleted.")]),e._v(" "),a("li",[e._v("All the data added after cleaning should comply with the "),a("a",{attrs:{href:"#data-management-protocol"}},[e._v("Data Management Protocol")]),e._v(".")]),e._v(" "),a("li",[e._v("Cloud Migration.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"review-and-future-additions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#review-and-future-additions","aria-hidden":"true"}},[this._v("#")]),this._v(" Review and future additions")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ol",[a("li",[a("p",[a("strong",[e._v("Review new directories")]),e._v(": New directories added to the folder structures (for both data and repositories) will be checked manually and using code to ensure consistency, and the owner of the data/code will be notified in case of discrepancies. The auto-checker code will be made available to the users for pre-checks before sharing. Alerts will be raised when the auto-checker detects non-compliances such as improper naming, too many orphan files, folders created at higher levels of the directory tree, etc. Periodic manual checks will be made for rules that cannot be checked automatically.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("Review coding standards")]),e._v(": Similar to an auto-checker, a linter will be used for checking compliance to coding standards. The linter will be made available to the users as well, for checks prior to sharing. Google uses this approach for volunteer contributions to their "),a("strong",[e._v("tensorflow/datasets")]),e._v(" repository.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("Gradual progression")]),e._v(": We will start with a small set of rules and they will be discussed before enactment. The auto-checker and the linter will check for these rules only. Once users are accustomed to these rules, other rules and practices will be added gradually and the auto-checker and the linter will be updated accordingly.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("Communication")]),e._v(": Periodic updates will be provided about our progress, scope of improvements, and possible solutions.")])])])}],!1,null,null,null);t.default=s.exports}}]);